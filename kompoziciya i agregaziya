// Пример композиции
public class Car {
private Engine engine;
private Wheels wheels;

public Car(Engine engine, Wheels wheels) {
this.engine = engine;
this.wheels = wheels;
}

//В этом случае, автомобиль состоит из двигателя и колес, и эти объекты не могут использоваться независимо от автомобиля.
}
// Пример агрегации
public class Vehicle {
protected Engine engine;

public Vehicle(Engine engine) {
this.engine = engine;
}
}
public class Car extends Vehicle {
private Tires tires;

public Car(Tires tires, Engine engine) {
super(engine);
this.tires = tires;
}

// Здесь автомобиль является агрегатом, состоящим из двигателя и шин. Двигатель и шины могут использоваться отдельно, но вместе они образуют автомобиль.
}
